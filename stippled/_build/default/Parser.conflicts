
** Conflict (shift/reduce) in state 114.
** Token involved: SEMICOLON
** This state is reached from main after reading:

FOREACH ID IN expression statement

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
program EOF 
statement_list 
(?)

** In state 114, looking ahead at SEMICOLON, shifting is permitted
** because of the following sub-derivation:

statement SEMICOLON statement_list 
FOREACH ID IN expression statement_list 
                         statement . SEMICOLON statement_list 

** In state 114, looking ahead at SEMICOLON, reducing production
** statement_list -> statement
** is permitted because of the following sub-derivation:

statement SEMICOLON statement_list // lookahead token appears
FOREACH ID IN expression statement_list // lookahead token is inherited
                         statement . 

** Conflict (reduce/reduce) in state 108.
** Tokens involved: TAIL SUB SIN POS POINT NOT LCUR INT ID HEAD FLOOR FLOAT_OF_INT FLOAT COS COLOR BOOL_LITERAL
** The following explanations concentrate on token TAIL.
** This state is reached from main after reading:

COPY expression SUB

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
program EOF 
statement_list 
statement SEMICOLON statement_list 
(?)

** In state 108, looking ahead at TAIL, reducing production
** binary_operator -> SUB
** is permitted because of the following sub-derivation:

COPY expression expression SEMICOLON 
     expression binary_operator expression // lookahead token appears because expression can begin with TAIL
                SUB . 

** In state 108, looking ahead at TAIL, reducing production
** unary_operator -> SUB
** is permitted because of the following sub-derivation:

COPY expression expression SEMICOLON 
                unary_operator expression // lookahead token appears because expression can begin with TAIL
                SUB . 

** Conflict (shift/reduce) in state 49.
** Tokens involved: SUB OR NE MUL MOD LT LE GT GE EQ DOT DIV CONS AND ADD
** The following explanations concentrate on token SUB.
** This state is reached from main after reading:

COPY expression binary_operator expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
program EOF 
statement_list 
statement SEMICOLON statement_list 
(?)

** In state 49, looking ahead at SUB, shifting is permitted
** because of the following sub-derivation:

COPY expression expression SEMICOLON 
     expression binary_operator expression 
                                expression binary_operator expression 
                                           . SUB 

** In state 49, looking ahead at SUB, reducing production
** expression -> expression binary_operator expression
** is permitted because of the following sub-derivation:

COPY expression expression SEMICOLON // lookahead token appears because expression can begin with SUB
     expression binary_operator expression . 

** Conflict (shift/reduce) in state 45.
** Tokens involved: SUB OR NE MUL MOD LT LE GT GE EQ DOT DIV CONS AND ADD
** The following explanations concentrate on token SUB.
** This state is reached from main after reading:

COPY expression CONS expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
program EOF 
statement_list 
statement SEMICOLON statement_list 
(?)

** In state 45, looking ahead at SUB, shifting is permitted
** because of the following sub-derivation:

COPY expression expression SEMICOLON 
     expression CONS expression 
                     expression binary_operator expression 
                                . SUB 

** In state 45, looking ahead at SUB, reducing production
** expression -> expression CONS expression
** is permitted because of the following sub-derivation:

COPY expression expression SEMICOLON // lookahead token appears because expression can begin with SUB
     expression CONS expression . 

** Conflict (shift/reduce) in state 23.
** Tokens involved: SUB OR NE MUL MOD LT LE GT GE EQ DOT DIV CONS AND ADD
** The following explanations concentrate on token SUB.
** This state is reached from main after reading:

COPY unary_operator expression

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
program EOF 
statement_list 
statement SEMICOLON statement_list 
(?)

** In state 23, looking ahead at SUB, shifting is permitted
** because of the following sub-derivation:

COPY expression expression SEMICOLON 
     unary_operator expression 
                    expression binary_operator expression 
                               . SUB 

** In state 23, looking ahead at SUB, reducing production
** expression -> unary_operator expression
** is permitted because of the following sub-derivation:

COPY expression expression SEMICOLON // lookahead token appears because expression can begin with SUB
     unary_operator expression . 

** Conflict (shift/reduce) in state 0.
** Token involved: EOF
** This state is reached from main after reading:



** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

main 
(?)

** In state 0, looking ahead at EOF, shifting is permitted
** because of the following sub-derivation:

. EOF 

** In state 0, looking ahead at EOF, reducing production
** statement_list ->
** is permitted because of the following sub-derivation:

program EOF // lookahead token appears
statement_list // lookahead token is inherited
. 
